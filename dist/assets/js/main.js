(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))r(t);new MutationObserver(t=>{for(const i of t)if(i.type==="childList")for(const a of i.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&r(a)}).observe(document,{childList:!0,subtree:!0});function s(t){const i={};return t.integrity&&(i.integrity=t.integrity),t.referrerPolicy&&(i.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?i.credentials="include":t.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function r(t){if(t.ep)return;t.ep=!0;const i=s(t);fetch(t.href,i)}})();class n{static loadFile(e){return new Promise((s,r)=>{fetch(e).then(t=>t.text()).then(t=>{s(t)}).catch(t=>{r(t)})})}static createWebGLContext(e){const s=e.getContext("webgl");if(s==null)throw new Error("webgl not supported");return s}static createShaderObject(e,s,r){const t=e.createShader(r);if(e.shaderSource(t,s),e.compileShader(t),e.getShaderParameter(t,e.COMPILE_STATUS))return t;throw new Error(e.getShaderInfoLog(t))}static createProgramObject(e,s,r){const t=e.createProgram();if(e.attachShader(t,s),e.attachShader(t,r),e.linkProgram(t),e.deleteShader(s),e.deleteShader(r),e.getProgramParameter(t,e.LINK_STATUS))return e.useProgram(t),t;throw new Error(e.getProgramInfoLog(t))}static createVBO(e,s){const r=e.createBuffer();return e.bindBuffer(e.ARRAY_BUFFER,r),e.bufferData(e.ARRAY_BUFFER,new Float32Array(s),e.STATIC_DRAW),e.bindBuffer(e.ARRAY_BUFFER,null),r}static enableAttribute(e,s,r,t){e.bindBuffer(e.ARRAY_BUFFER,s),e.enableVertexAttribArray(r),e.vertexAttribPointer(r,t,e.FLOAT,!1,0,0)}}class c{constructor(){this.canvas=null,this.gl=null,this.program=null,this.position=null,this.positionStride=null,this.vbo=null,this.init(),this.setup()}init(){this.canvas=document.getElementById("webgl"),this.gl=n.createWebGLContext(this.canvas);const e=Math.min(window.innerWidth,window.innerHeight);this.canvas.width=e,this.canvas.height=e}async setup(){this.load()}load(){return new Promise((s,r)=>{const t=this.gl;if(t==null){const i=new Error("not init");r(i)}else n.loadFile("./shader/main.vert").then(i=>(n.createShaderObject(t,i,t.VERTEX_SHADER),n.loadFile("./shader/main.frag")))})}setupGeometry(){}setupLoacation(){}setupRendering(){}onUpdate(){}}class d{constructor(){this.isUpdate=!0,this.isMouseMove=!1,this.isScroll=!1,this.setup(),this.setEvents()}setup(){this.gl=new c(document.querySelector(".canvaswrap"))}onUpdate(){if(!this.isUpdate)return;const e=window.scrollY;this.timer=requestAnimationFrame(this.onUpdate.bind(this)),this.gl.onUpdate(e)}onResize(){this.gl.onResize()}onMouseMove(){this.isMouseMove}onScroll(){this.isScroll}load(){window.scrollTo(0,0)}setEvents(){this.onUpdate(),window.addEventListener("resize",this.onResize.bind(this)),window.addEventListener("mousemove",this.onMouseMove.bind(this)),window.addEventListener("scroll",this.onScroll.bind(this)),window.addEventListener("load",this.load.bind(this))}}new d;
